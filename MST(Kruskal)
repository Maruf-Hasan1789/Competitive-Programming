
//In the Name of Allah Most Gracious, Most Merciful//
/*If you want something you've never had, you have  to do something you never did.*/

#include<bits/stdc++.h>
using namespace std;


#define pb push_back
#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define M 100007
#define INF 1e9
#define INFL 1e18
#define PI acos(-1)
#define mp make_pair

//const int fx[]= {+1,-1,+0,+0};
//const int fy[]= {+0,+0,+1,-1};
//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move
//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move
//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move
//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move
vector<int>adj[M];

int pr[M];


struct edge
{
    ll u,v,w,idx;
    bool operator<(const edge& p)const
    {
        return w<p.w;
    }
};
vector<edge>e;
vector<int>ans;

ll root(ll i)
{
    if(pr[i]==i)
    {
        return i;
    }
    return pr[i]=root(pr[i]);
}

void mst(ll n)
{
    sort(e.begin(),e.end());
    for(ll i=0;i<=n;i++)
    {
        pr[i]=i;
    }
    ll cnt=0,s=0;
    for(int i=0;i<e.size();i++)
    {
        ll u=root(e[i].u);
        ll v=root(e[i].v);
        if(u!=v)
        {
            pr[u]=v;
            cnt++;
            s+=e[i].w;
            ans.pb(e[i].idx);
            if(cnt==n-1)
                break;
        }
    }
    return ;
}
int main()
{

   //  #ifndef ONLINE_JUDGE
   //    freopen("input.txt","r",stdin);
   //    freopen("output.txt","w",stdout);
  //   #endif

    int n,m,k;
    cin>>n>>m>>k;
    for(int i=0;i<m;i++)
    {
        int x,y,w;
        cin>>x>>y>>w;
        edge get;
        get.u=x;
        get.v=y;
        get.w=w;
        get.idx=i;
        e.pb(get);
    }
    mst(n);
    cout<<min((int)ans.size(),k)<<endl;
    for(int i=0;i<k;i++)
    {
        cout<<ans[i]+1<<endl;
    }
///Before submit=>
///    *check for integer overflow,array bounds
///    *check for n=1
}

