
//In the Name of Allah Most Gracious, Most Merciful//
/*If you want something you've never had, you have  to do something you never did.*/

#include<bits/stdc++.h>
using namespace std;


#define pb push_back
#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define MaxN 201007
#define INF 1e9
#define INFL 1e18
#define PI acos(-1)
#define mp make_pair

//const int fx[]= {+1,-1,+0,+0};
//const int fy[]= {+0,+0,+1,-1};
//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move
//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move
//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move
//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move


int gcd(int a, int b)
{
 return b ? gcd(b, a%b) : a;
}

ll bigmod(ll b,ll p,ll m)
{
    ll res=1LL%m;
    ll x=b%m;
    while(p)
    {
        if( p & 1LL )res=(res*x) % m;
        x=(x*x)%m;
        p >>=1LL;
    }
    return res;
}


int sparsetable[MaxN][25];
int logval[MaxN+10];





int main()
{

   //  #ifndef ONLINE_JUDGE
   //    freopen("input.txt","r",stdin);
   //    freopen("output.txt","w",stdout);
  //   #endif
    //log precomputation
    logval[1]=0;
    for(int i=2;i<=MaxN;i++)
    {
        logval[i]=logval[i/2]+1;
    }
    int n,m;
    cin>>n>>m;
    int arr[n+100];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
        sparsetable[i][0]=arr[i];
        //cout<<sparsetable[i][0]<<endl;
    }
    for(int j=1;j<=25;j++)
    {
        for(int i=0;i+(1<<j)<=n;i++)
        {
            sparsetable[i][j]=max(sparsetable[i][j-1],sparsetable[i+(1<<(j-1))][j-1]);
            //cout<<i<<" "<<j<<"val :"<<sparsetable[i][j]<<endl;
        }
    }
    int L,R;

    cin>>L>>R;
    int j = logval[R - L + 1];
    int maximum = max(sparsetable[L][j], sparsetable[R - (1 << j) + 1][j]);
  //  cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
// #endif
///Before submit=>
///    *check for integer overflow,array bounds
///    *check for n=1
}

