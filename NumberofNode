
//In the Name of Allah Most Gracious, Most Merciful//
/*If you want something you've never had, you have  to do something you never did.*/

#include<bits/stdc++.h>
using namespace std;


#define pb push_back
#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define M 1000007
#define INF 1e9
#define INFL 1e18
#define PI acos(-1)
#define mp make_pair
#define fast_in_out ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
//const int fx[]= {+1,-1,+0,+0};
//const int fy[]= {+0,+0,+1,-1};
//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move
//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move
//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move
//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move



vector<int>adj[M];
int subtree[M];
bool visited[M];
void dfs(int v)
{
    visited[v]=true;

    for(int i=0;i<adj[v].size();i++)
    {
        int k=adj[v][i];

        if(visited[k]==false)
        {
            dfs(k);
                subtree[v]=+subtree[k];
        }

    }
    subtree[v]++;
}
int main()
{
    fast_in_out;
   //  #ifndef ONLINE_JUDGE
   //    freopen("input.txt","r",stdin);
   //    freopen("output.txt","w",stdout);
  //   #endif
  int n;
  cin>>n;
  vector<pii>v;
  for(int i=0;i<n-1;i++)
  {
      int x,y;
      cin>>x>>y;
      adj[x].pb(y);
      adj[y].pb(x);
      v.pb(mp(x,y));
  }
//  int m;
//  cin>>m;
//  priority_queue<int,vector<int>,less<int> >pq;
//  for(int i=0;i<m;i++)
//  {
//      int x;
//      cin>>x;
//    pq.push(x);
//  }
  dfs(1);
  for(int i=0;i<v.size();i++)
  {
      int x=v[i].first;
      int y=v[i].second;
      cout<<subtree[x]<<" "<<subtree[y]<<endl;
  }
}

